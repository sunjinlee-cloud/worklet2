<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">



     <mapper namespace="com.project2.worklet.user.service.UserMapper">
        <insert id="insertUser" parameterType="com.project2.worklet.component.UserVO">
            INSERT INTO member (
                user_num,
                user_id,
                user_pw,
                user_name,
                user_gender,
                user_phone,
                user_email,
                user_address,
                user_birthday,
                want_job_num,
                want_job_type1,
                want_job_type2,
                want_job_type3,
                want_job_workexp,
                want_job_workexp_howlong,
                join_date,
                preferred_job_type_1,
                preferred_job_type_2,
                preferred_job_type_3
            )
            VALUES (
                       #{userNum},
                       #{userId},
                       #{userPw},
                       #{userName},
                       #{userGender},
                       #{userPhone},
                       #{userEmail},
                       #{userAddress},
                       #{userBirthday},
                       #{wantJobNum},
                       #{wantJobType1},
                       #{wantJobType2},
                       #{wantJobType3},
                       #{wantJobWorkexp},
                       #{wantJobWorkexpHowlong},
                       #{joinDate},
                        <foreach collection="preferredJobTypes" item="item" separator=",">
                           #{item}
                        </foreach>
                   )
        </insert>




    <select id="loginUser" resultType="com.project2.worklet.component.UserVO">
        select *
        from member
        where user_id = #{userId} and user_pw = #{userPw} LIMIT 1
    </select>

    <select id="getUserById" resultType="com.project2.worklet.component.UserVO">
        SELECT * FROM member WHERE user_id = #{userId}
    </select>


    <!--  아이디 찾기  -->
    <select id="existsByUserId" resultType="int">
        SELECT COUNT(*) FROM member WHERE user_id = #{userId}
    </select>


    <!--  사용자 아이디 찾기  -->
    <select id="findUserByUserId" resultType="com.project2.worklet.component.UserVO">
        SELECT user_id, user_name, join_date
        FROM member
        WHERE user_email = #{userEmail} AND user_phone = #{userPhone}
    </select>


    <!--  사용자 아이디 찾기  -->
    <select id="findUserByUserPw" resultType="com.project2.worklet.component.UserVO">
        SELECT user_pw, user_name, join_date, user_id
        FROM member
        WHERE user_id= #{userId} AND user_email = #{userEmail}
    </select>

    <!--  비밀번호 바꾸기  -->
    <update id="updatePw" parameterType="com.project2.worklet.component.UserVO">
    UPDATE member SET user_pw = #{userPw} WHERE user_id = #{userId}
    </update>

    <!-- 학력 추가 -->
    <insert id="insertEdu" parameterType="EduVO">
        INSERT INTO education (
            user_num,
            school_name,
            major,
            part,
            degree_type,
            graduation_status,
            graduation_date,
            created_at,
            updated_at
        ) VALUES (
                     #{userNum},
                     #{schoolName},
                     #{major},
                     #{part},
                     #{degreeType},
                     #{graduationStatus},
                     #{graduationDate},
                     NOW(),
                     NOW()
                 );
    </insert>



    <!-- 학력 수정 -->
    <update id="updateEdu" parameterType="EduVO">
        UPDATE education
        SET
            school_name = #{schoolName},
            major = #{major},
            part = #{part},
            degree_type = #{degreeType},
            graduation_status = #{graduationStatus},
            graduation_date = #{graduationDate},
            updated_at = NOW()
        WHERE user_num = #{userNum} AND education_id = #{educationId};
    </update>

    <!-- 경력 추가 -->
    <insert id="insertCareer" parameterType="CareerVO">
        INSERT INTO career (
            user_num,
            company_name,
            department,
            position,
            join_date,
            quit_date,
            job_description,
            created_at,
            updated_at
        ) VALUES (
                     #{userNum},
                     #{companyName},
                     #{department},
                     #{position},
                     #{joinDate},
                     #{quitDate},
                     #{jobDescription},
                     NOW(),
                     NOW()
                 );
    </insert>

    <!-- 경력 수정 -->
    <update id="updateCareer" parameterType="CareerVO">
        UPDATE career
        SET
            company_name = #{companyName},
            department = #{department},
            position = #{position},
            join_date = #{joinDate},
            quit_date = #{quitDate},
            job_description = #{jobDescription},
            updated_at = NOW()
        WHERE user_num = #{userNum} AND career_id = #{careerId};
    </update>


</mapper>